version: "3.8"

volumes:
  authentication-service-pgdata:

networks:
  gobbler-net:
    driver: bridge

services:
  kong:
    build:
      context: ./api_gateway/kong
      dockerfile: Dockerfile
    restart: always
    networks:
      - gobbler-net
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
      - "8445:8445"
      - "8003:8003"
      - "8004:8004"

  authentication-service-postgres:
    image: postgres:13
    restart: always
    networks:
      - gobbler-net
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5400:5432"
    healthcheck:
      test: ["CMD", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - authentication-service-pgdata:/var/lib/postgresql/data

  authentication-service:
    build:
      context: ./api_gateway/authentication_service/authentication
      dockerfile: Dockerfile
    image: authentication-service
    container_name: authentication-service
    restart: always
    environment:
      DATABASE_SERVER: authentication-service-postgres
      DATABASE_PORT: 5432
      POSTGRES_USERNAME: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      AUTH_TOKEN_SECRET: ${AUTH_TOKEN_SECRET}
    ports:
      - "5401:5401"
    networks:
      - gobbler-net
    depends_on: 
      - authentication-service-postgres

  reservation-mysql:
    build:
        context: ./simple_services/reservation/mysql
        dockerfile: Dockerfile
    container_name: reservation-mysql
    restart: always
    ports:
      - "5004:5004"
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./simple_services/reservation/mysql/data:/var/lib/mysql
      - ./simple_services/reservation/mysql/logs:/var/log/mysql

  reservation-simple-ms:
      build:
        context: ./simple_services/reservation
        dockerfile: Dockerfile
      image: reservation-simple-ms
      container_name: reservation-simple-ms
      restart: always
      ports:
        - "5003:5003"
      environment:
        DB_SERVER: reservation-mysql
        DB_PORT: 5004
        DB_USER: ${DATABASE_USER}
        DB_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE: reservations
      depends_on: 
        - reservation-mysql

  fastapi-template-mysql:
    build:
      context: ./fastapi_template/mysql
      dockerfile: Dockerfile
    container_name: fastapi-template-mysql
    restart: always
    ports:
      - "8081:8081"
    networks:
      - gobbler-net
    environment:
      DATABASE: reservations
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./fastapi_template/mysql/data:/var/lib/mysql
      - ./fastapi_template/mysql/logs:/var/log/mysql

  fastapi-template:
    build:
      context: ./fastapi_template
      dockerfile: Dockerfile
    image: fastapi-template
    container_name: fastapi-template
    restart: always
    environment:
      DB_SERVER: fastapi-template-mysql
      DB_PORT: 8081
      DB_USER: ${DATABASE_USER}
      DB_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE: reservations
    networks:
      - gobbler-net
    depends_on: 
      - fastapi-template-mysql
